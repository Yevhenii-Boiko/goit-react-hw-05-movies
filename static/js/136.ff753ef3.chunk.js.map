{"version":3,"file":"static/js/136.ff753ef3.chunk.js","mappings":"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","sources":["components/Details/Details.styled.js","components/Details/Details.js","pages/MovieDetails.js","services/Api-Service.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 400;\n  text-transform: uppercase;\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  & > img {\n    margin-right: 30px;\n  }\n`;\n\nexport const DetailsTitle = styled.h2`\n  margin-top: 0;\n  font-size: 48px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const DetailsText = styled.p`\n  font-size: 16px;\n  margin-bottom: 15px;\n  text-align: justify;\n`;\n\nexport const InfoContainer = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 400;\n  text-transform: uppercase;\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { DetailsContainer, DetailsText, DetailsTitle } from './Details.styled';\n\nexport const Details = ({ movieDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieDetails;\n  return (\n    <>\n      <DetailsContainer>\n        <img src={poster_path} alt={original_title} width=\"400\" />\n        <div>\n          <DetailsTitle>\n            {original_title}({release_date})\n          </DetailsTitle>\n          <DetailsText>User score: {vote_average}</DetailsText>\n          <h2>Overview</h2>\n          <DetailsText>{overview}</DetailsText>\n          <h2>Genres</h2>\n          <DetailsText>{genres}</DetailsText>\n        </div>\n      </DetailsContainer>\n    </>\n  );\n};\n","import { Details } from 'components/Details/Details';\nimport {\n  BackLink,\n  InfoLink,\n  InfoContainer,\n} from 'components/Details/Details.styled';\nimport { Suspense, useRef, useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/Api-Service';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getDetailsById = async movieId => {\n      try {\n        const movieDetails = await getMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n      } finally {\n      }\n    };\n    getDetailsById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {movieDetails && (\n        <div>\n          <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n          <Details movieDetails={movieDetails} />\n          <div>\n            <h2>Additional information</h2>\n            <InfoContainer>\n              <li>\n                <InfoLink to=\"cast\">Cast</InfoLink>\n              </li>\n              <li>\n                <InfoLink to=\"reviews\">Reviews</InfoLink>\n              </li>\n            </InfoContainer>\n          </div>\n        </div>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport defaultImg from '../img/default.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '12a1c9f7c08bf08c5c3c451723bbd88a';\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path: getPoster(poster_path),\n    original_title,\n    release_date: release_date.slice(0, 4),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n\nexport async function getMovieCast(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?language=en-US&page=1&include_adult=false&api_key=${API_KEY}`\n  );\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path: getPoster(profile_path),\n  }));\n  return credits;\n}\n\nexport async function getMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n  );\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n\nexport async function getMoviesSearch(query) {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&language=en-US&page=1&include_adult=false&api_key=${API_KEY}`\n  );\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  console.log(movies);\n  return movies;\n}\n\nconst getPoster = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : defaultImg;\n"],"names":["BackLink","styled","Link","DetailsContainer","DetailsTitle","DetailsText","InfoContainer","InfoLink","Details","movieDetails","poster_path","original_title","release_date","vote_average","overview","genres","src","alt","width","useState","setMovieDetails","location","useLocation","movieId","useParams","backLinkLocationRef","useRef","state","from","useEffect","getDetailsById","getMovieDetails","to","current","Suspense","fallback","axios","API_KEY","getTrending","data","movies","results","map","id","getPoster","slice","toFixed","name","join","getMovieCast","credits","cast","profile_path","getMovieReviews","reviews","author","content","getMoviesSearch","query","console","log","url","defaultImg"],"sourceRoot":""}